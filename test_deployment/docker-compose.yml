version: "3.9"

services:
    docknet:
        build:
            context: ..
            dockerfile: ./Dockerfile
        ports:
            - "127.0.0.1:30010:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - POSTGRES_CONNECTION_URI=postgresql://postgres:postgres@postgres:5432/postgres
            - S3_ENDPOINT=s3:9000
            - S3_ACCESS_KEY=minioadmin
            - S3_SECRET_KEY=minioadmin
            - BACKEND_CORS_ORIGINS=http://localhost:3000
            - USER_REGISTRATION_ENABLED=False
        depends_on:
            - postgres
            - s3

    docknet-setup:
        image: curlimages/curl:7.75.0
        entrypoint:
            ["sh", "-c", "sleep 5 && curl docknet:8080/api/seed/default"]
        restart: "no"
        depends_on:
            - docknet

    postgres:
        image: postgres:13.2
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - "127.0.0.1:30011:5432"

    pgweb:
        container_name: pgweb
        restart: always
        image: sosedoff/pgweb
        ports:
            - "30012:8081"
        environment:
            - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
        depends_on:
            - postgres

    s3:
        image: minio/minio:RELEASE.2021-03-04T00-53-13Z
        command: server /data{1...4}
        ports:
            - "127.0.0.1:30013:9000"

    # docknet-extension-workspace:
    #     image: docknet-extension-workspace
    #     restart: always
    #     ports:
    #         - "127.0.0.1:30014:8080"
    #     environment:
    #         - DOCKNET_ENDPOINT=http://docknet:8080/api
    #         - DOCKNET_DEPLOYMENT_NAME=docknet-extension-workspace
    #     labels:
    #         ctxy.namespace: "ctxy"
    #         ctxy.deploymentType: "extension"
    #         ctxy.deploymentName: "docknet-extension-workspace"
    #         ctxy.projectName: "ctxy-global"
    #         ctxy.ui_extension_endpoint: "8080/projects/{env.projectId}/workspace"
    #         ctxy.api_extension_endpoint: "8080/projects/{env.projectId}/workspace"
    #     depends_on:
    #         - docknet
